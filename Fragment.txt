#version 330 core

layout(location = 0)out vec4 FragColor;

in vec3 Position;
in vec3 Normal;
in vec3 Color;
in vec2 TexCoord;

uniform vec3 cameraPos;
uniform samplerCube skybox;
uniform sampler2D ourTexture;
uniform vec3 lightPos;
uniform vec3 lightColor;

void main(){
	// ambient
	float ambientStrength = 0.5;
	vec3 ambient = ambientStrength * lightColor;

	// diffuse
	vec3 norm = normalize(Position - cameraPos);
	vec3 lightDir = normalize(lightPos - Position);
	float diffuseStrength = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = diffuseStrength * lightColor * 2.0;

	vec3 result = (ambient + diffuse) * Color;

	vec3 R = reflect(norm, normalize(Normal)); 
	FragColor = texture(ourTexture, TexCoord) * vec4(result, 1.0);
}